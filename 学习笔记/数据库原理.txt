数据库事务的四大特性以及事务的隔离级别：
⑴ 原子性（Atomicity）
　　原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。

⑵ 一致性（Consistency）
　　一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。

　　拿转账来说，假设用户A和用户B两者的钱加起来一共是5000，那么不管A和B之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是5000，这就是事务的一致性。

⑶ 隔离性（Isolation）
　　隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。

　　即要达到这么一种效果：对于任意两个并发的事务T1和T2，在事务T1看来，T2要么在T1开始之前就已经结束，要么在T1结束之后才开始，这样每个事务都感觉不到有其他事务在并发地执行。

⑷ 持久性（Durability）
　　持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。
　　
现在来看看MySQL数据库为我们提供的四种隔离级别：依次降低
　　① Serializable (串行化)：可避免脏读、不可重复读、幻读的发生。Serializable 是最高的事务隔离级别，在该级别下，事务串行化顺序执行，可以避免脏读、不可重复读与幻读。但是这种事务隔离级别效率低下，比较耗数据库性能，一般不使用。
　　② Repeatable read (可重复读)：可避免脏读、不可重复读的发生。在开始读取数据（事务开启）时，不再允许修改操作
　　③ Read committed (读已提交)：可避免脏读的发生。就是一个事务要等另一个事务提交后才能读取数据。
　　④ Read uncommitted (读未提交)：最低级别，任何情况都无法保证。就是一个事务可以读取另一个未提交事务的数据。
　　
　　
分组查询并统计达到某一值：
问题描述：从TEACHER表中查询至少有两位教师的系及教师人数。
sql:
SELECT DNAME, COUNT(*) AS num_teacher
FROM TEACHER
GROUP BY DNAME
HAVING COUNT(*)>=2
